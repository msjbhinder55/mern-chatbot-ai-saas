name: CI/CD Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.txt"
      - ".gitignore"
      - "docs/**"
  pull_request:
    branches: [main]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  lint:
    name: Lint (${{ matrix.component }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ["backend", "frontend"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        working-directory: ./${{ matrix.component }}
        run: npm install

      - name: Run ESLint
        working-directory: ./${{ matrix.component }}
        run: npm run lint

  unit-tests:
    name: Unit Tests (${{ matrix.component }})
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ["backend", "frontend"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        working-directory: ./${{ matrix.component }}
        run: npm ci

      - name: Run tests with coverage
        working-directory: ./${{ matrix.component }}
        run: npm test -- --coverage
        env:
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.component }}-test-results
          path: ${{ matrix.component }}/coverage/**

  build-and-push:
    name: Build & Push Containers
    needs: unit-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ["backend", "frontend"]
    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.component }}
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/mern-chatbot-ai-saas-${{ matrix.component }}:latest
            ${{ env.DOCKERHUB_USERNAME }}/mern-chatbot-ai-saas-${{ matrix.component }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
