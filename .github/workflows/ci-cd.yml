name: CI Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.txt"
      - ".gitignore"
  pull_request:
    branches: [main]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [backend, frontend]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies (${{ matrix.component }})
        working-directory: ./${{ matrix.component }}
        run: npm ci

      - name: Run ESLint (${{ matrix.component }})
        working-directory: ./${{ matrix.component }}
        run: npm run lint || (echo "Linting failed" && exit 1)

      - name: Run unit tests (${{ matrix.component }})
        working-directory: ./${{ matrix.component }}
        run: npm test
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.component }}-test-results
          path: ${{ matrix.component }}/test-results/**

  build-and-push:
    name: Build & Push Containers
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/mern-chatbot-backend:latest
            ${{ env.DOCKERHUB_USERNAME }}/mern-chatbot-backend:${{ env.IMAGE_TAG }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/mern-chatbot-frontend:latest
            ${{ env.DOCKERHUB_USERNAME }}/mern-chatbot-frontend:${{ env.IMAGE_TAG }}

  sast:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run SonarQube Analysis
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
