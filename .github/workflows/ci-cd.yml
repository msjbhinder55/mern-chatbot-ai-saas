name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend Docker Image
        run: docker build -t backend ./backend

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Frontend Docker Image
        run: docker build -t frontend ./frontend

  test-backend:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Backend Unit Tests
        run: |
          docker build -t backend-test ./backend
          docker run backend-test npm test

  test-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Frontend Unit Tests
        run: |
          docker build -t frontend-test ./frontend
          docker run frontend-test npm test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run ESLint
        run: |
          npm install eslint
          npx eslint . || true  # don't fail the pipeline

  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run SAST with CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  push-images:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and Push Backend Image
        run: |
          docker tag backend ${{ secrets.DOCKERHUB_USERNAME }}/mern-chatbot-ai-saas-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mern-chatbot-ai-saas-backend:latest

      - name: Tag and Push Frontend Image
        run: |
          docker tag frontend ${{ secrets.DOCKERHUB_USERNAME }}/mern-chatbot-ai-saas-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mern-chatbot-ai-saas-frontend:latest
